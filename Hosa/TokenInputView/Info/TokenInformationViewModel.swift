//
//  TokenInformationViewModel.swift
//  Hosa
//
//  Created by Laura Corssac on 10/27/20.
//  Copyright Â© 2020 Laura Corssac. All rights reserved.
//

import Foundation
import RxCocoa
import RxSwift

protocol InformationViewModel {
    var sectionList: BehaviorSubject<[TokenInformationSectionModel]> { get }
}

class TokenInformationViewModel: InformationViewModel {
    
    let sectionList = BehaviorSubject<[TokenInformationSectionModel]>(value: [])
    
    init() {

        let firstText =
"""
        <p>A token is a key to enter the app. For you to have access to Hosa's features, you first need a code, which has to be generated by a person that already has access to the app. With this code, you can:</p>

        <ul>
          <li>See a live stream of the place watched by the camera.</li>
          <li>Control the system</li>
          <li>Generate new tokens to invite more people to access the same!</li>
          
        </ul>
        <p></p>
        <p>You may have access to one, two, or all the three features, depending on what the person who invited you chose to allow you! </p>
        <p>You may receive the code generated like a link to the app: <p>
""".stringFromHtml()
        

        let image = UIImage(named: "example.jpg")

        let middleText =
"""
        <p> In this case, you should only tap the link and, if it is a valid token, you are going to access the app automatically! </p>

        <p> Also, you can receive a QR code, which is a picture like the following: </p>
""".stringFromHtml()
        
        let qrCodeImage = UIImage(named: "qrCode.jpg")
        
        let bottomText = """
        <p> In this case, you should place your camera upon it and, if it is a valid token, you are going to access the app automatically! </p>

        <p> If you already had access to the app but now it is not working anymore, it may be the case that the token was deleted by the person who created it. You should then ask this person to get a new one. <p>
""".stringFromHtml()
        
        sectionList.onNext([.section(title: "" , items: [.textCell(viewModel: firstText),
                                                         .imageCell(image: image),
                                                         .textCell(viewModel: middleText),
                                                         .imageCell(image: qrCodeImage),
                                                         .textCell(viewModel: bottomText)])])
    }
}

extension String {
    func stringFromHtml() -> NSAttributedString {
        
        let data = self.data(using: String.Encoding.utf8, allowLossyConversion: true)
        if let d = data {
            let str = try? NSAttributedString(data: d,
                                              options: [NSAttributedString.DocumentReadingOptionKey.documentType: NSAttributedString.DocumentType.html],
                                              documentAttributes: nil)
            return str ?? NSAttributedString(string: "")
        }
        return NSAttributedString(string: "")
    }
}


